{"ast":null,"code":"var _jsxFileName = \"/home/vitor/react01/src/componentes/PersonList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PersonList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      persons: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://jsonplaceholder.typicode.com/users`).then(res => {\n      const persons = res.data;\n      this.setState({\n        persons\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      width: \"500\",\n      border: \"'\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        class: \"users\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Acao\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), this.state.persons.map(person => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: person.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/vitor/react01/src/componentes/PersonList.js"],"names":["React","axios","PersonList","Component","state","persons","componentDidMount","get","then","res","data","setState","render","map","person","name","email"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAO,EAAP;;AAEA,eAAe,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACtDC,KADsD,GAC9C;AACNC,MAAAA,OAAO,EAAE;AADH,KAD8C;AAAA;;AAKtDC,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,KAAK,CAACM,GAAN,CAAW,4CAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAMJ,OAAO,GAAGI,GAAG,CAACC,IAApB;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAJH;AAKD;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACI;AAAO,MAAA,KAAK,EAAC,KAAb;AAAmB,MAAA,MAAM,EAAC,GAA1B;AAAA,8BACA;AAAI,QAAA,KAAK,EAAC,OAAV;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAMC,KAAKR,KAAL,CAAWC,OAAX,CAAmBQ,GAAnB,CAAuBC,MAAM,iBAC1B;AAAA,gCACI;AAAA,oBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CAND;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeD;;AA7BqD","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport '';\n\nexport default class PersonList extends React.Component {\n  state = {\n    persons: []\n  }\n\n  componentDidMount() {\n    axios.get(`https://jsonplaceholder.typicode.com/users`)\n      .then(res => {\n        const persons = res.data;\n        this.setState({ persons });\n      })\n  }\n\n  render() {\n    return (\n        <table width=\"500\" border=\"'\">\n        <tr class='users'>\n          <td>Nome</td>\n          <td>Email</td>\n          <td>Acao</td>\n        </tr>\n        {this.state.persons.map(person =>     \n            <tr>\n                <td>{person.name}</td>\n                <td>{person.email}</td>\n            </tr>\n        )}\n      </table>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}